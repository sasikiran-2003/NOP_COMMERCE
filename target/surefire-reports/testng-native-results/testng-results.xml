<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="17" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-09T12:51:37 IST" name="Surefire suite" finished-at="2025-09-09T12:57:35 IST" duration-ms="358402">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-09-09T12:51:37 IST" name="Surefire test" finished-at="2025-09-09T12:57:35 IST" duration-ms="358402">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:01 IST" name="setUp" finished-at="2025-09-09T12:55:05 IST" duration-ms="4177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.LoginTest.testUserLoginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserLoginWithValidCredentials()[pri:1, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:05 IST" name="testUserLoginWithValidCredentials" description="Verify user can login with valid credentials" finished-at="2025-09-09T12:55:39 IST" duration-ms="33504" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login was not successful expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login was not successful expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.LoginTest.testUserLoginWithValidCredentials(LoginTest.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:151)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:192)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:93)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:39 IST" name="tearDown" finished-at="2025-09-09T12:55:40 IST" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLoginWithValidCredentials status=FAILURE method=LoginTest.testUserLoginWithValidCredentials()[pri:1, instance:tests.LoginTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:40 IST" name="setUp" finished-at="2025-09-09T12:55:44 IST" duration-ms="4026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.LoginTest.testUserLoginWithInvalidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserLoginWithInvalidCredentials()[pri:2, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:44 IST" name="testUserLoginWithInvalidCredentials" description="Verify login fails with invalid credentials" finished-at="2025-09-09T12:55:45 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:45 IST" name="tearDown" finished-at="2025-09-09T12:55:46 IST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testUserLoginWithInvalidCredentials()[pri:2, instance:tests.LoginTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:46 IST" name="setUp" finished-at="2025-09-09T12:55:50 IST" duration-ms="4305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.LoginTest.testUserLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserLogout()[pri:3, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:55:50 IST" name="testUserLogout" description="Verify user can logout successfully" finished-at="2025-09-09T12:56:23 IST" duration-ms="32471" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.className: ico-logout' (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.className: ico-logout' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at pages.BasePage.waitForElementToBeClickable(BasePage.java:43)
at pages.LoginPage.clickLogout(LoginPage.java:84)
at tests.LoginTest.testUserLogout(LoginTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:151)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:192)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:93)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".ico\-logout"}
  (Session info: chrome=140.0.7339.81)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [25d0b77f260c00391213671a1906e1f6, findElement {using=class name, value=ico-logout}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.81, chrome: {chromedriverVersion: 140.0.7339.80 (670b6f192f46..., userDataDir: C:\Users\chenn\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63207}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63207/devtoo..., se:cdpVersion: 140.0.7339.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 25d0b77f260c00391213671a1906e1f6
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy36.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogout -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:23 IST" name="tearDown" finished-at="2025-09-09T12:56:23 IST" duration-ms="550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogout status=FAILURE method=LoginTest.testUserLogout()[pri:3, instance:tests.LoginTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:23 IST" name="setUp" finished-at="2025-09-09T12:56:28 IST" duration-ms="4219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginWithEmptyCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginWithEmptyCredentials()[pri:4, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:28 IST" name="testLoginWithEmptyCredentials" description="Verify login fails with empty credentials" finished-at="2025-09-09T12:56:29 IST" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:29 IST" name="tearDown" finished-at="2025-09-09T12:56:29 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithEmptyCredentials status=SUCCESS method=LoginTest.testLoginWithEmptyCredentials()[pri:4, instance:tests.LoginTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:29 IST" name="setUp" finished-at="2025-09-09T12:56:32 IST" duration-ms="2921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginWithEmptyPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginWithEmptyPassword()[pri:5, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:32 IST" name="testLoginWithEmptyPassword" description="Verify login fails with valid email but empty password" finished-at="2025-09-09T12:56:34 IST" duration-ms="1945" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.LoginTest.testLoginWithEmptyPassword(LoginTest.java:58)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:151)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:192)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:93)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithEmptyPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@38c6f217]" started-at="2025-09-09T12:56:34 IST" name="tearDown" finished-at="2025-09-09T12:56:35 IST" duration-ms="543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithEmptyPassword status=FAILURE method=LoginTest.testLoginWithEmptyPassword()[pri:5, instance:tests.LoginTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.BaseTest">
        <test-method is-config="true" signature="setUpSuite()[pri:0, instance:tests.BaseTest@2d7275fc]" started-at="2025-09-09T12:51:36 IST" name="setUpSuite" finished-at="2025-09-09T12:51:37 IST" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:tests.BaseTest@2d7275fc]" started-at="2025-09-09T12:57:35 IST" name="tearDownSuite" finished-at="2025-09-09T12:57:36 IST" duration-ms="548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- tests.BaseTest -->
      <class name="tests.CartTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.CartTest@399f45b1]" started-at="2025-09-09T12:54:34 IST" name="setUp" finished-at="2025-09-09T12:54:41 IST" duration-ms="6458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.CartTest.testProceedToCheckoutFromCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProceedToCheckoutFromCart()[pri:1, instance:tests.CartTest@399f45b1]" started-at="2025-09-09T12:54:41 IST" name="testProceedToCheckoutFromCart" description="Verify user can proceed to checkout from cart" finished-at="2025-09-09T12:54:59 IST" duration-ms="18325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProceedToCheckoutFromCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CartTest@399f45b1]" started-at="2025-09-09T12:54:59 IST" name="tearDown" finished-at="2025-09-09T12:55:01 IST" duration-ms="2017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProceedToCheckoutFromCart status=SUCCESS method=CartTest.testProceedToCheckoutFromCart()[pri:1, instance:tests.CartTest@399f45b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CartTest -->
      <class name="tests.ProductTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:35 IST" name="setUp" finished-at="2025-09-09T12:56:38 IST" duration-ms="2984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.ProductTest.testViewProductDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testViewProductDetails()[pri:1, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:38 IST" name="testViewProductDetails" description="Verify user can view product details" finished-at="2025-09-09T12:56:39 IST" duration-ms="881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewProductDetails -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:39 IST" name="tearDown" finished-at="2025-09-09T12:56:39 IST" duration-ms="606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testViewProductDetails status=SUCCESS method=ProductTest.testViewProductDetails()[pri:1, instance:tests.ProductTest@478190fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:39 IST" name="setUp" finished-at="2025-09-09T12:56:43 IST" duration-ms="3474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.ProductTest.testAddConfigurableProductToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddConfigurableProductToCart()[pri:2, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:43 IST" name="testAddConfigurableProductToCart" description="Verify user can configure and add product to cart" finished-at="2025-09-09T12:56:46 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddConfigurableProductToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:46 IST" name="tearDown" finished-at="2025-09-09T12:56:46 IST" duration-ms="703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddConfigurableProductToCart status=SUCCESS method=ProductTest.testAddConfigurableProductToCart()[pri:2, instance:tests.ProductTest@478190fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:46 IST" name="setUp" finished-at="2025-09-09T12:56:49 IST" duration-ms="2820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.ProductTest.testAddSimpleProductToCartFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddSimpleProductToCartFromCategory()[pri:3, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:49 IST" name="testAddSimpleProductToCartFromCategory" description="Verify user can add simple product to cart from category page" finished-at="2025-09-09T12:56:52 IST" duration-ms="2571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSimpleProductToCartFromCategory -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:52 IST" name="tearDown" finished-at="2025-09-09T12:56:53 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddSimpleProductToCartFromCategory status=SUCCESS method=ProductTest.testAddSimpleProductToCartFromCategory()[pri:3, instance:tests.ProductTest@478190fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:53 IST" name="setUp" finished-at="2025-09-09T12:56:55 IST" duration-ms="2725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.ProductTest.testProductSearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProductSearchFunctionality()[pri:4, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:55 IST" name="testProductSearchFunctionality" description="Verify product search functionality" finished-at="2025-09-09T12:56:58 IST" duration-ms="2684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductSearchFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:58 IST" name="tearDown" finished-at="2025-09-09T12:56:59 IST" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductSearchFunctionality status=SUCCESS method=ProductTest.testProductSearchFunctionality()[pri:4, instance:tests.ProductTest@478190fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:56:59 IST" name="setUp" finished-at="2025-09-09T12:57:02 IST" duration-ms="3475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.ProductTest.testProductFilterFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProductFilterFunctionality()[pri:5, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:57:02 IST" name="testProductFilterFunctionality" description="Verify product filter functionality" finished-at="2025-09-09T12:57:04 IST" duration-ms="1483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductFilterFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductTest@478190fc]" started-at="2025-09-09T12:57:04 IST" name="tearDown" finished-at="2025-09-09T12:57:04 IST" duration-ms="512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductFilterFunctionality status=SUCCESS method=ProductTest.testProductFilterFunctionality()[pri:5, instance:tests.ProductTest@478190fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ProductTest -->
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:04 IST" name="setUp" finished-at="2025-09-09T12:57:07 IST" duration-ms="2973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.RegisterTest.testUserRegistrationWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserRegistrationWithValidCredentials()[pri:1, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:07 IST" name="testUserRegistrationWithValidCredentials" description="Verify user can register with valid credentials" finished-at="2025-09-09T12:57:10 IST" duration-ms="3156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationWithValidCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:10 IST" name="tearDown" finished-at="2025-09-09T12:57:13 IST" duration-ms="2767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistrationWithValidCredentials status=SUCCESS method=RegisterTest.testUserRegistrationWithValidCredentials()[pri:1, instance:tests.RegisterTest@79e2c065] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:13 IST" name="setUp" finished-at="2025-09-09T12:57:16 IST" duration-ms="2708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.RegisterTest.testUserRegistrationWithExistingEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserRegistrationWithExistingEmail()[pri:2, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:16 IST" name="testUserRegistrationWithExistingEmail" description="Verify registration fails with existing email" finished-at="2025-09-09T12:57:18 IST" duration-ms="2654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationWithExistingEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:18 IST" name="tearDown" finished-at="2025-09-09T12:57:19 IST" duration-ms="622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistrationWithExistingEmail status=SUCCESS method=RegisterTest.testUserRegistrationWithExistingEmail()[pri:2, instance:tests.RegisterTest@79e2c065] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:19 IST" name="setUp" finished-at="2025-09-09T12:57:21 IST" duration-ms="2532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.RegisterTest.testUserRegistrationWithPasswordMismatch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserRegistrationWithPasswordMismatch()[pri:3, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:21 IST" name="testUserRegistrationWithPasswordMismatch" description="Verify registration fails with password confirmation mismatch" finished-at="2025-09-09T12:57:24 IST" duration-ms="2286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationWithPasswordMismatch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:24 IST" name="tearDown" finished-at="2025-09-09T12:57:24 IST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistrationWithPasswordMismatch status=SUCCESS method=RegisterTest.testUserRegistrationWithPasswordMismatch()[pri:3, instance:tests.RegisterTest@79e2c065] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:24 IST" name="setUp" finished-at="2025-09-09T12:57:28 IST" duration-ms="3466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.RegisterTest.testUserRegistrationWithWeakPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserRegistrationWithWeakPassword()[pri:4, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:28 IST" name="testUserRegistrationWithWeakPassword" description="Verify registration fails with weak password" finished-at="2025-09-09T12:57:30 IST" duration-ms="2594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationWithWeakPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:30 IST" name="tearDown" finished-at="2025-09-09T12:57:31 IST" duration-ms="506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistrationWithWeakPassword status=SUCCESS method=RegisterTest.testUserRegistrationWithWeakPassword()[pri:4, instance:tests.RegisterTest@79e2c065] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:31 IST" name="setUp" finished-at="2025-09-09T12:57:34 IST" duration-ms="3071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.RegisterTest.testUserRegistrationWithEmptyFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserRegistrationWithEmptyFields()[pri:5, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:34 IST" name="testUserRegistrationWithEmptyFields" description="Verify registration fails with empty required fields" finished-at="2025-09-09T12:57:35 IST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationWithEmptyFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@79e2c065]" started-at="2025-09-09T12:57:35 IST" name="tearDown" finished-at="2025-09-09T12:57:35 IST" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistrationWithEmptyFields status=SUCCESS method=RegisterTest.testUserRegistrationWithEmptyFields()[pri:5, instance:tests.RegisterTest@79e2c065] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:51:37 IST" name="setUpClass" finished-at="2025-09-09T12:51:38 IST" duration-ms="1244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@413773e6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:51:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:52:39 IST" duration-ms="60617" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successful login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at stepdefinitions.LoginSteps.i_should_see_the_logout_link(LoginSteps.java:52)
at ✽.I should see the logout link(file:///C:/Users/chenn/eclipse-workspace/NOP_COMMERCE/src/test/java/features/login.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:52:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:52:49 IST" duration-ms="10585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid credentials should fail"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:52:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:53:42 IST" duration-ms="52290" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successful logout"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.className: ico-logout' (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.className: ico-logout' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at pages.BasePage.waitForElementToBeClickable(BasePage.java:43)
at pages.LoginPage.clickLogout(LoginPage.java:84)
at stepdefinitions.LoginSteps.i_click_the_logout_link(LoginSteps.java:47)
at ✽.I click the logout link(file:///C:/Users/chenn/eclipse-workspace/NOP_COMMERCE/src/test/java/features/login.feature:23)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".ico\-logout"}
  (Session info: chrome=140.0.7339.81)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5b346b55d13084b885866faa2baf5928, findElement {using=class name, value=ico-logout}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.81, chrome: {chromedriverVersion: 140.0.7339.80 (670b6f192f46..., userDataDir: C:\Users\chenn\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62845}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62845/devtoo..., se:cdpVersion: 140.0.7339.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5b346b55d13084b885866faa2baf5928
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy36.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
at pages.BasePage.waitForElementToBeClickable(BasePage.java:43)
at pages.LoginPage.clickLogout(LoginPage.java:84)
at stepdefinitions.LoginSteps.i_click_the_logout_link(LoginSteps.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)
at io.cucumber.core.runner.TestStep.run(TestStep.java:56)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:151)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:192)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:93)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:53:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:54:05 IST" duration-ms="23777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successful registration with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:54:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:54:22 IST" duration-ms="16138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Registration with existing email should fail"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:54:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T12:54:34 IST" duration-ms="12545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Registration with password mismatch should fail"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@6b927fb]" started-at="2025-09-09T12:54:34 IST" name="tearDownClass" finished-at="2025-09-09T12:54:34 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
